{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.1",
    "title": "YourPet API docs",
    "description": "API documentation for GoIT project 'Your Pet'. [Backend github repository](https://github.com/Lusiy321/final-project-yourpet-backend)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://final-project-yourpe-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Posts",
      "description": "Book endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "403": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout method",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["Auth"],
        "summary": "Update user data",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Object with session's id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid refresh token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/users/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication. WARNING: Works only for sign-in, after registered on front-end (if you're writing your back-end for a SPECIFIC front-end, then you can configure it right to work both for sign-up & sign-in)",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken, refreshToken and sid in query). Then use GET /user/books",
            "content": {}
          },
          "403": {
            "description": "Not registered or registered with postman",
            "content": {}
          }
        }
      }
    },
    "/users/google-redirect": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication. WARNING: Works only for sign-in, after registered on front-end (if you're writing your back-end for a SPECIFIC front-end, then you can configure it right to work both for sign-up & sign-in)",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with accessToken, refreshToken and sid in query). Then use GET /user/books",
            "content": {}
          },
          "403": {
            "description": "Not registered or registered with postman",
            "content": {}
          }
        }
      }
    },
    "/posts/": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get all posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Posts object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },

    "/posts/{userId}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get post by user ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The Transaction ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid 'postId', you can't delete book that you've already read/reading / Invalid 'postId",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/posts/add": {
      "post": {
        "tags": ["Posts"],
        "summary": "Add post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "description": "post's id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "description": "post's review object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / Invalid 'postId' / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "post hasn't been finished yet",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/posts/{postId}": {
      "put": {
        "tags": ["Posts"],
        "summary": "Update post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Posts object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/posts/favorite/{postId}": {
      "patch": {
        "tags": ["Posts"],
        "summary": "Add or del to favorite posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Posts object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/posts/favget/{userId}": {
      "get": {
        "tags": ["Posts"],
        "summary": "Get favorite posts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Posts object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/posts/del/{postId}": {
      "delete": {
        "tags": ["Posts"],
        "summary": "Del one post",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The Transaction ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddpostRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid 'postId', you can't delete post that you've already read/reading / Invalid 'postId",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "mail_on123@gmail.com",
            "description": "User's email",
            "format": "email",
            "minLength": 2,
            "maxLength": 254
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 8,
            "maxLength": 100
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "00.00.0000"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+38000000000"
          },
          "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kyiv"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatarURL",
            "example": "null"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "null"
          },
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "null"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "mail_on123@gmail.com",
            "format": "email",
            "minLength": 2,
            "maxLength": 254
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 8,
            "maxLength": 100
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NmYzM2VhYWU3NTA0NGZkMWY5MzM4MiIsImlhdCI6MTY4NTAxMDIyNCwiZXhwIjoxNjg1MDEzODI0fQ.w_ozGlytvwaL13Le-FC5V2IFkfbBKOxmuIp0AkBKuYg"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "null"
          }
        }
      },
      "updateRequest": {
        "type": "object",
        "properties": {
    "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ann",
            "minLength": 2,
            "maxLength": 80
          },
    "email": {
            "type": "string",
            "description": "User's email",
            "example": "mail_on123@gmail.com",
            "format": "email",
            "minLength": 2,
            "maxLength": 254
    },
    "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6     
    },
    "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "00.00.0000",
            "minLength": 10
          },
    "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+38000000000",
            "minLength": 12,
            "maxLength": 12
    },
    "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kyiv",
            "minLength": 2,
            "maxLength": 30
    },
    "avatarURL": {
          "type": "string",
          "description": "User's avatar",
          "example": "https://www.google.com/url?sa=i&url=https%3A%2F%2Fuk.wikipedia.org%2Fwiki%2F%25D0%259F%25D0%25B5%25D1%2580%25D0%25B5%25D0%25BA%25D0%25BB%25D0%25B0%25D0%25B4%25D0%25B0%25D1%2587_Google&psig=AOvVaw1dmOpWRFabw3eC4YyON3GA&ust=1685107611309000&source=images&cd=vfe&ved=0CBEQjRxqFwoTCJirt5bJkP8CFQAAAAAdAAAAABAJ"
    }
        }
      },
      "updateResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ann",
            "minLength": 2,
            "maxLength": 80
          },
    "email": {
            "type": "string",
            "description": "User's email",
            "example": "mail_on123@gmail.com",
            "format": "email",
            "minLength": 2,
            "maxLength": 254
    },
    "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6     
    },
    "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "00.00.0000",
            "minLength": 10
          },
    "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+38000000000",
            "minLength": 12,
            "maxLength": 12
    },
    "location": {
            "type": "string",
            "description": "User's location",
            "example": "Kyiv",
            "minLength": 2,
            "maxLength": 30
    },
    "avatarURL": {
          "type": "string",
          "description": "User's avatar",
          "example": "https://www.google.com/url?sa=i&url=https%3A%2F%2Fuk.wikipedia.org%2Fwiki%2F%25D0%259F%25D0%25B5%25D1%2580%25D0%25B5%25D0%25BA%25D0%25BB%25D0%25B0%25D0%25B4%25D0%25B0%25D1%2587_Google&psig=AOvVaw1dmOpWRFabw3eC4YyON3GA&ust=1685107611309000&source=images&cd=vfe&ved=0CBEQjRxqFwoTCJirt5bJkP8CFQAAAAAdAAAAABAJ"
    }
        }
      },
      "AddBookRequest": {
        "required": ["title", "author", "publishYear", "totalPages"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Book of Five Rings",
            "description": "Book's title",
            "minLength": 1,
            "maxLength": 254
          },
          "author": {
            "type": "string",
            "example": "Miyamoto Musashi",
            "description": "Book's author",
            "minLength": 2,
            "maxLength": 254
          },
          "publishYear": {
            "type": "integer",
            "example": 1643,
            "description": "Book's publish year"
          },
          "pagesTotal": {
            "type": "integer",
            "example": 110,
            "description": "Book's total amount of pages",
            "minimum": 1,
            "maximum": 5000
          }
        }
      },
      "AddBookResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Book of Five Rings",
            "description": "Book's title"
          },
          "author": {
            "type": "string",
            "example": "Miyamoto Musashi",
            "description": "Book's author"
          },
          "publishYear": {
            "type": "integer",
            "example": 1643,
            "description": "Book's publish year"
          },
          "pagesTotal": {
            "type": "integer",
            "example": 110,
            "description": "Book's total amount of pages"
          },
          "pagesFinished": {
            "type": "integer",
            "example": 0,
            "description": "Book's total amount of pages"
          },
          "_id": {
            "type": "string",
            "description": "Book's id",
            "example": "507f1f77bcf86cd799439013"
          },
          "__v": {
            "type": "integer",
            "description": "MongoDB document service versionKey (ignore)"
          }
        }
      },
      "BookReviewRequest": {
        "required": ["rating", "feedback"],
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "example": 5,
            "description": "Book's rating",
            "minimum": 0,
            "maximum": 5
          },
          "feedback": {
            "type": "string",
            "example": "Really good book",
            "description": "Book's feedback",
            "minLength": 1,
            "maxLength": 3000
          }
        }
      },
      "BookReviewResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Book of Five Rings",
            "description": "Book's title"
          },
          "author": {
            "type": "string",
            "example": "Miyamoto Musashi",
            "description": "Book's author"
          },
          "publishYear": {
            "type": "integer",
            "example": 1643,
            "description": "Book's publish year"
          },
          "totalPages": {
            "type": "integer",
            "example": 110,
            "description": "Book's total amount of pages"
          },
          "pagesFinished": {
            "type": "integer",
            "example": 110,
            "description": "Book's total amount of pages"
          },
          "rating": {
            "type": "integer",
            "example": 5,
            "description": "Book's rating",
            "minimum": 0,
            "maximum": 5
          },
          "feedback": {
            "type": "string",
            "example": "Really good book",
            "description": "Book's feedback"
          },
          "_id": {
            "type": "string",
            "description": "Book's id",
            "example": "507f1f77bcf86cd799439013"
          },
          "__v": {
            "type": "integer",
            "description": "MongoDB document service versionKey (ignore)"
          }
        }
      },
      "AddPlanningRequest": {
        "required": ["startDate", "endDate", "books"],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2020-12-31",
            "description": "Planning's start date"
          },
          "endDate": {
            "type": "string",
            "example": "2020-01-05",
            "description": "Planning's end date"
          },
          "books": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of the book you want to add to planning"
            },
            "example": ["507f1f77bcf86cd799439013"]
          }
        }
      },
      "AddPlanningResponse": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2020-12-31",
            "description": "Planning's start date"
          },
          "endDate": {
            "type": "string",
            "example": "2020-01-05",
            "description": "Planning's end date"
          },
          "books": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Book of Five Rings",
                  "description": "Book's title"
                },
                "author": {
                  "type": "string",
                  "example": "Miyamoto Musashi",
                  "description": "Book's author"
                },
                "publishYear": {
                  "type": "integer",
                  "example": 1643,
                  "description": "Book's publish year"
                },
                "totalPages": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "pagesFinished": {
                  "type": "integer",
                  "example": 0,
                  "description": "Book's total amount of pages"
                },
                "rating": {
                  "type": "integer",
                  "example": 5,
                  "description": "Book's rating",
                  "minimum": 0,
                  "maximum": 5
                },
                "feedback": {
                  "type": "string",
                  "example": "Really good book",
                  "description": "Book's feedback"
                },
                "_id": {
                  "type": "string",
                  "description": "Book's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            }
          },
          "duration": {
            "type": "integer",
            "description": "Duration of planning (in days)",
            "example": 5
          },
          "pagesPerDay": {
            "type": "integer",
            "description": "Amount of pages needed to be read each day",
            "example": 2
          },
          "stats": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "Planning period day date",
                "example": "2021-01-06"
              },
              "pagesCount": {
                "type": "string",
                "description": "Amount of pages read on this day",
                "example": 35
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "Planning id",
            "example": "507f1f77bcf86cd799439014"
          }
        }
      },
      "ReadPagesRequest": {
        "required": ["pages"],
        "type": "object",
        "properties": {
          "pages": {
            "type": "integer",
            "example": 10,
            "description": "Amount of pages read"
          }
        }
      },
      "ReadPagesResponse": {
        "type": "object",
        "properties": {
          "book": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "The Book of Five Rings",
                "description": "Book's title"
              },
              "author": {
                "type": "string",
                "example": "Miyamoto Musashi",
                "description": "Book's author"
              },
              "publishYear": {
                "type": "integer",
                "example": 1643,
                "description": "Book's publish year"
              },
              "totalPages": {
                "type": "integer",
                "example": 110,
                "description": "Book's total amount of pages"
              },
              "pagesFinished": {
                "type": "integer",
                "example": 10,
                "description": "Book's total amount of pages"
              },
              "_id": {
                "type": "string",
                "description": "Book's id",
                "example": "507f1f77bcf86cd799439013"
              },
              "__v": {
                "type": "integer",
                "description": "MongoDB document service versionKey (ignore)"
              }
            }
          },
          "planning": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "example": "2020-12-31",
                "description": "Planning's start date"
              },
              "endDate": {
                "type": "string",
                "example": "2020-01-05",
                "description": "Planning's end date"
              },
              "books": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Book's id",
                      "example": "507f1f77bcf86cd799439013"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "Duration of planning (in days)",
                      "example": 5
                    },
                    "pagesPerDay": {
                      "type": "integer",
                      "description": "Amount of pages needed to be read each day",
                      "example": 2
                    },
                    "stats": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "description": "Planning period day date",
                          "example": "2021-01-06"
                        },
                        "pagesCount": {
                          "type": "string",
                          "description": "Amount of pages read on this day",
                          "example": 35
                        }
                      }
                    }
                  }
                }
              },
              "_id": {
                "type": "string",
                "description": "Planning id",
                "example": "507f1f77bcf86cd799439014"
              }
            }
          }
        }
      },
      "GetPlanning": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2020-12-31",
            "description": "Planning's start date"
          },
          "endDate": {
            "type": "string",
            "example": "2020-01-05",
            "description": "Planning's end date"
          },
          "books": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Book of Five Rings",
                  "description": "Book's title"
                },
                "author": {
                  "type": "string",
                  "example": "Miyamoto Musashi",
                  "description": "Book's author"
                },
                "publishYear": {
                  "type": "integer",
                  "example": 1643,
                  "description": "Book's publish year"
                },
                "totalPages": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "pagesFinished": {
                  "type": "integer",
                  "example": 0,
                  "description": "Book's total amount of pages"
                },
                "rating": {
                  "type": "integer",
                  "example": 5,
                  "description": "Book's rating",
                  "minimum": 0,
                  "maximum": 5
                },
                "feedback": {
                  "type": "string",
                  "example": "Really good book",
                  "description": "Book's feedback"
                },
                "_id": {
                  "type": "string",
                  "description": "Book's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            }
          },
          "duration": {
            "type": "integer",
            "description": "Duration of planning (in days)",
            "example": 5
          },
          "pagesPerDay": {
            "type": "integer",
            "description": "Amount of pages needed to be read each day",
            "example": 2
          },
          "stats": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "description": "Planning period day date",
                "example": "2021-01-06"
              },
              "pagesCount": {
                "type": "string",
                "description": "Amount of pages read on this day",
                "example": 35
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "Planning id",
            "example": "507f1f77bcf86cd799439014"
          }
        }
      },
      "GetBooksAndEmail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Test"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "goingToRead": {
            "type": "array",
            "description": "User's books, that hasn't been started yet",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Book of Five Rings",
                  "description": "Book's title"
                },
                "author": {
                  "type": "string",
                  "example": "Miyamoto Musashi",
                  "description": "Book's author"
                },
                "publishYear": {
                  "type": "integer",
                  "example": 1643,
                  "description": "Book's publish year"
                },
                "totalPages": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "pagesFinished": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "_id": {
                  "type": "string",
                  "description": "Book's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            }
          },
          "currentlyReading": {
            "type": "array",
            "description": "User's books, that he's currently reading",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Book of Five Rings",
                  "description": "Book's title"
                },
                "author": {
                  "type": "string",
                  "example": "Miyamoto Musashi",
                  "description": "Book's author"
                },
                "publishYear": {
                  "type": "integer",
                  "example": 1643,
                  "description": "Book's publish year"
                },
                "totalPages": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "pagesFinished": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "_id": {
                  "type": "string",
                  "description": "Book's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            },
            "example": []
          },
          "finishedReading": {
            "type": "array",
            "description": "User's books, that he already has finished",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Book of Five Rings",
                  "description": "Book's title"
                },
                "author": {
                  "type": "string",
                  "example": "Miyamoto Musashi",
                  "description": "Book's author"
                },
                "publishYear": {
                  "type": "integer",
                  "example": 1643,
                  "description": "Book's publish year"
                },
                "totalPages": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "pagesFinished": {
                  "type": "integer",
                  "example": 110,
                  "description": "Book's total amount of pages"
                },
                "_id": {
                  "type": "string",
                  "description": "Book's id",
                  "example": "507f1f77bcf86cd799439013"
                },
                "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
                }
              }
            },
            "example": []
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
